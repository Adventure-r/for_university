"""
Пример синтеза и отрисовки магнитного поля внутри соленоида.

Мы рассчитываем магнитное поле вдоль оси конечного соленоида по формуле:
   B(z) = (μ0 * n * I)/2 * { [ (z + L/2) / sqrt((z + L/2)**2 + R**2) ] -
                               [ (z - L/2) / sqrt((z - L/2)**2 + R**2) ] }
где μ0 – магнитная постоянная, n = N/L – число витков на метр,
I – ток, L – длина, R – радиус соленоида.

Для отрисовки распределения поля внутри соленоида мы вводим простое приближение,
при котором поле зависит от радиального смещения x таким образом:
    B(x, z) ≈ B_on_axis(z) * [1 - (x/R)^2] ,  при |x| ≤ R,
и плавно уменьшается вне соленоида.

Отрисовка производится с помощью matplotlib в виде контурного (цветового) графика.
"""

import numpy as np
import matplotlib.pyplot as plt
from math import sqrt

# Магнитная постоянная (в Т·м/A): μ0 = 4π×10⁻⁷
mu0 = 4 * np.pi * 1e-7

# Параметры соленоида
I  = 5.0       # ток (А)
L  = 0.5       # длина соленоида (м)
N  = 500       # общее число витков
R  = 0.1       # радиус соленоида (м)
n  = N / L     # число витков на метр

def magnetic_field_on_axis(z, R=R, L=L, n=n, I=I, mu0=mu0):
    """
    Вычисляет магнитное поле вдоль оси соленоида в точке z по аналитической формуле:
    
      B(z) = (μ0 * n * I)/2 * { [ (z + L/2) / sqrt((z + L/2)**2 + R**2) ] -
                                 [ (z - L/2) / sqrt((z - L/2)**2 + R**2) ] }
                                 
    Аргументы:
      z   - координата по оси (может быть число или массив).
    
    Возвращает:
      B(z) - магнитное поле в точке z (Тл).
    """
    term1 = (z + L/2) / np.sqrt((z + L/2)**2 + R**2)
    term2 = (z - L/2) / np.sqrt((z - L/2)**2 + R**2)
    return 0.5 * mu0 * n * I * (term1 - term2)

def magnetic_field_2d(x, z, R=R, L=L, n=n, I=I, mu0=mu0):
    """
    Приближённо вычисляет магнитное поле вдоль оси (B_z) в точке (x, z)
    для отображения распределения поля внутри соленоида.
    
    Подход:
      - Сначала рассчитывается поле вдоль оси B_on_axis(z) с помощью аналитической формулы.
      - Затем вводится модификатор, зависящий от радиального расстояния x от оси:
      
            modulation = 1 - (x/R)**2   при |x| ≤ R,
            
      который плавно уменьшает величину поля при отклонении от оси. Для |x| > R
      мы просто ограничим значение до нуля.
      
    Аргументы:
      x, z - координаты точки (в метрах). Здесь x принимает значение,
             соответствующее смещению от оси соленоида (представляем, что y = 0).
      
    Возвращает:
      B_value - приближённое значение магнитного поля (Тл) в точке (x, z).
    """
    # Вычисляем поле по оси для заданного z:
    B_on_axis = magnetic_field_on_axis(z, R, L, n, I, mu0)
    # Моделируем уменьшение поля вдоль осевого среза при удалении от оси
    modulation = 1 - (x / R)**2
    modulation = np.clip(modulation, 0, 1)  # значение не опускается ниже нуля
    return B_on_axis * modulation

# ---------------------------------------------------------------------------------
# Отрисовка магнитного поля вдоль оси соленоида (1D-график)
# ---------------------------------------------------------------------------------
# Задаём диапазон z от -L до L (чтобы увидеть поле от одного конца до другого)
z_values = np.linspace(-L, L, 500)
B_axis = magnetic_field_on_axis(z_values)

plt.figure(figsize=(10, 5))
plt.plot(z_values, B_axis, 'b-', linewidth=2, label='B(z) по оси')
plt.title('Магнитное поле вдоль оси соленоида')
plt.xlabel('z (м)')
plt.ylabel('B (Тл)')
plt.grid(True)
plt.legend()
plt.tight_layout()
plt.show()

# ---------------------------------------------------------------------------------
# Отрисовка магнитного поля в области вокруг оси соленоида (2D-контурный график)
# ---------------------------------------------------------------------------------
# Создадим 2D-сетку по горизонтали (x) и вдоль оси (z)
# x будем варьировать от -1.5R до 1.5R, а z от -L до L
x_vals = np.linspace(-1.5*R, 1.5*R, 200)
z_vals = np.linspace(-L, L, 200)
X, Z = np.meshgrid(x_vals, z_vals)

# Вычисляем магнитное поле для каждой точки сетки, используя приближённую функцию magnetic_field_2d.
B_field = magnetic_field_2d(X, Z, R, L, n, I, mu0)

# Отрисовываем цветовую карту (контурное заполнение) магнитного поля
plt.figure(figsize=(8, 6))
contour = plt.contourf(X, Z, B_field, 50, cmap='viridis')
plt.colorbar(contour, label='Магнитное поле B (Тл)')
plt.title('Распределение магнитного поля внутри соленоида')
plt.xlabel('x (м) – смещение от оси')
plt.ylabel('z (м) – ось соленоида')
plt.grid(True)
plt.tight_layout()
plt.show()

# ---------------------------------------------------------------------------------
# Дополнительная визуализация: схематичное изображение соленоида
# ---------------------------------------------------------------------------------
plt.figure(figsize=(8,8))
plt.plot([-R, -R, R, R, -R], [-L/2, L/2, L/2, -L/2, -L/2], 'k-', linewidth=2, label="Соленоид")
plt.axvline(0, color='gray', linestyle='--')
plt.title('Схематичное изображение соленоида')
plt.xlabel('x (м)')
plt.ylabel('z (м)')
plt.grid(True)
plt.legend()
plt.tight_layout()
plt.show()
