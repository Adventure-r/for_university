ошаговое объяснение работы программы

    Импорт и исходные данные: В начале импортируется numpy, который используется для представления матриц и векторов. Далее задаётся список продуктов, коэффициенты дохода, матрица затрат ресурсов (каждая строка соответствует одному ресурсу: площадь, труд, тяга) и вектор доступных ресурсов. Эти данные определяют исходную задачу ЛП.

    Функция simplex: Функция принимает векторы и матрицу, описывающие задачу:

        Входящие данные преобразуются в симплекс‑табло. Для каждого ограничения добавляется слаговая переменная, что позволяет перейти от неравенств к равенствам.

        Целевая функция записывается в нижней строке табло с коэффициентами, взятыми с отрицательным знаком (так как симплекс реализован для поиска минимума).

        Изначально в базисе находятся слаговые переменные.

        Затем начинается итерационный цикл пивотирования, в котором выбирается входящая переменная (со значением цели < 0) и определяется исходящая по критерию минимального отношения. Выполняется нормализация выбранной строки и обнуление столбца пивота в остальных строках.

        Цикл завершается, когда в строке цели не останется отрицательных коэффициентов, что означает достижение оптимума.

        Из финального табло извлекается оптимальное решение для исходных переменных. Оптимальное значение целевой функции находится в правом нижнем углу табло.

    Основная часть программы: В основном блоке программы:

        Вызывается функция simplex с исходными данными, после чего извлекается оптимальный план производства и максимальный доход.

        С помощью матричного умножения вычисляется, какое количество каждого ресурса используется согласно найденному плану.

        Результаты выводятся в консоль: оптимальное количество продукции для каждого продукта, максимальный доход, использованные ресурсы (как в абсолютном выражении, так и в процентном соотношении) и анализ ограничений (какие ресурсы являются лимитирующими, то есть используются полностью).

Полезные моменты и тонкости

    Преобразование задачи максимизации: Так как симплекс-метод здесь реализован для минимизации, коэффициенты целевой функции умножаются на −1-1 для преобразования исходной задачи максимизации в задачу минимизации.

    Структура симплекс‑табло: В таблице строками являются ограничения, а последний столбец содержит правые части ограничений. Слаговые переменные образуют начальный базис, что гарантирует допустимость стартового решения.

    Пивотирование и выбор переменных: Ключевым моментом является выбор входящей переменной (на основе самого отрицательного коэффициента в строке цели) и исходящей переменной (по методу минимального отношения). Использование порога tol помогает избежать ошибок, связанных с погрешностями вычислений с плавающей запятой.

    Интерпретация результата: После завершения алгоритма из финального табло извлекается оптимальное значение для исходных переменных, а оставшиеся переменные — слаговые, отвечающие за разницу между лимитами ресурсов и фактическим расходом. Сравнение этих величин позволяет проводить анализ ограничений: если потребление ресурса совпадает с доступным объёмом (с учётом небольшой погрешности), такой ресурс считается лимитирующим.
